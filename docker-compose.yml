services:
  app-store-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: app-store-mcp-server
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
      - SCRAPING_TIMEOUT=${SCRAPING_TIMEOUT:-30000}
      - SCRAPING_RETRIES=${SCRAPING_RETRIES:-3}
      # Tool Configuration - Uncomment and modify as needed
      # - DISABLED_TOOLS=${DISABLED_TOOLS:-}  # Comma-separated list of tools to disable
      # - ENABLED_TOOLS=${ENABLED_TOOLS:-}   # Comma-separated list of tools to enable (if set, only these tools will be enabled)
      # Individual tool controls (examples):
      # - DISABLE_TOOL_GOOGLE_PLAY_SEARCH=${DISABLE_TOOL_GOOGLE_PLAY_SEARCH:-false}
      # - DISABLE_TOOL_APP_STORE_SEARCH=${DISABLE_TOOL_APP_STORE_SEARCH:-false}
      # - ENABLE_TOOL_GOOGLE_PLAY_APP_DETAILS=${ENABLE_TOOL_GOOGLE_PLAY_APP_DETAILS:-true}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network

  # Development service with hot reload
  app-store-mcp-server-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: app-store-mcp-server-dev
    ports:
      - "${DEV_PORT:-3001}:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - LOG_LEVEL=debug
      # Tool Configuration - Uncomment and modify as needed
      # - DISABLED_TOOLS=${DISABLED_TOOLS:-}  # Comma-separated list of tools to disable
      # - ENABLED_TOOLS=${ENABLED_TOOLS:-}   # Comma-separated list of tools to enable (if set, only these tools will be enabled)
    volumes:
      - ./src:/app/src:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
    command: npm run dev
    restart: unless-stopped
    networks:
      - mcp-network
    profiles:
      - dev

networks:
  mcp-network:
    driver: bridge